/*
 * This file was generated by the Gradle 'init' task.
 *
 * This generated file contains a sample Java project to get you started.
 * For more details take a look at the Java Quickstart chapter in the Gradle
 * User Manual available at https://docs.gradle.org/6.0.1/userguide/tutorial_java_projects.html
 */
plugins {
    // Apply the java plugin to add support for Java
    id 'java'

    // Apply the application plugin to add support for building a CLI application.
    id 'application'
    //Spring boot

	id 'org.springframework.boot' version '2.2.1.RELEASE'
	id 'io.spring.dependency-management' version '1.0.8.RELEASE'

	id 'jacoco'
	id "org.sonarqube" version "2.7"
	
}

apply plugin: 'jacoco'

repositories {
    // Use jcenter for resolving dependencies.
    // You can declare any Maven/Ivy/file repository here.
    jcenter()
}

dependencies {
    // This dependency is used by the application.
    implementation 'com.google.guava:guava:28.0-jre'

    // Use JUnit test framework
    testImplementation 'junit:junit:4.12'
    
    //Spring boot
	implementation 'org.springframework.boot:spring-boot-starter-data-jdbc'
	implementation 'org.springframework.boot:spring-boot-starter-data-rest'
	implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
	implementation 'org.springframework.boot:spring-boot-starter-jdbc'
	implementation 'org.springframework.boot:spring-boot-starter-security'
	implementation 'org.springframework.boot:spring-boot-starter-thymeleaf'
	implementation 'org.springframework.boot:spring-boot-starter-web'
	implementation 'org.springframework.boot:spring-boot-starter-webflux'
	//mysql 
		runtimeOnly 'mysql:mysql-connector-java'
        testImplementation 'org.springframework.boot:spring-boot-starter-test'
	
        components {
            withModule('org.springframework:spring-beans') {
                allVariants {
                    withDependencyConstraints {
                        // Need to patch constraints because snakeyaml is an optional dependency
                        it.findAll { it.name == 'snakeyaml' }.each { it.version { strictly '1.19' } }
                    }
                }
            }
        }    

	testImplementation 'io.projectreactor:reactor-test'
	testImplementation 'org.springframework.security:spring-security-test'

}
application {
    // Define the main class for the application.
    mainClassName = 'com.Parking.App'
}

sonarqube {
	properties {
		property "sonar.sources", "src/main/java"
		property "sonar.java.binaries", "build/classes/java/main"
		property "sonar.tests", "src/test/java"
		property "sonar.test.binaries", "build/classes/java/test"
		property "sonar.jacoco.reportPaths", "build/jacoco/test.exec"
		property "sonar.junit.reportPaths", "build/test-results/test"
	}
}
